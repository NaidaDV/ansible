- name: Installing apache, php on "webapp"
  hosts: webapp
  become: yes
  tasks:

  - name: installing apache2
    package:
      name: apache2
      state: latest

  - name: add php repo
    apt_repository: repo='ppa:ondrej/php'
  - name: install php
    package:
      name=php5 state=latest
  - name: installing php packages
    package: 
      name: "{{ item }}" 
      state: latest 
      update_cache: yes
    with_items:
        - php5-cli
        - php5-curl
        - php5-fpm
        - php5-mcrypt
        - php5-mysql
        - php5-sqlite
        - php5-intl

  - name: delete default index.html from apache
    file:
      name: /var/www/html/index.html
      state: absent
  - name: adding application to apache
    copy:
      src: ./foo/app/
      dest: /var/www/html
  - name: making app files accesable
    file:
      path: /var/www/html
      recurse: yes
      mode: '0555'

  - name: restarting apache
    service: name=apache2 state=started enabled=yes
  - name: restarting php5-fpm
    service: name=php5-fpm state=restarted enabled=yes

##############################################################

- name: Installing nginx on "loadbalancer"
  hosts: loadbalancer
  become: yes
  tasks:

  - name: installing
    package:
      name: nginx
      state: latest

  - name: adding loadbalancer configuration
    copy:
      src: ./foo/nginx_conf/loadbalancer.conf
      dest: /etc/nginx/conf.d/

  - name: deleting default from sites-enabled (Debian)
    file: 
      path: rm /etc/nginx/sites-enabled/default
      state: absent
    when:
      - ansible_facts['os_family'] == 'Debian'

  - name: renaming default from sites-enabled (CentOS)
    copy: 
      remote_src=True 
      src=/etc/nginx/conf.d/default.conf 
      dest=/etc/nginx/conf.d/default.conf.disabled
    when:
      - ansible_facts['os_family'] == 'CentOS'

  - name: deleting default from sites-enabled (CentOS)
    file: 
      path: /etc/nginx/conf.d/default.conf
      state: absent
    when: 
      - ansible_facts['os_family'] == 'CentOS'
 
  - name: changing rights for nginx dir
    file:
      path: /etc/nginx
      recurse: yes
      owner: vagrant
      mode: '0755'

  - name: changing rights for logs
    file:
      path: /var/log/nginx/error.log
      owner: vagrant
      mode: '0766'

  - name: restarting nginx
    service: name=nginx state=restarted enabled=yes

##########################################################
- name: Installing MySQL on "database"
  hosts: database
  become: yes
  tasks:

  - name: installing
    package:
      name: 
        - mysql-server
        - python-mysqldb
      state: latest

  - name: copying database dump
    copy:
      src: ./foo/db/test.sql
      dest: /var/lib/mysql/

  - name: ensure that db 'test' don't exist
    mysql_db:
      name: test
      state: absent    
  - name: creating database 'test'
    mysql_db:
      name: test
      state: present
  - name: importing dump file to 'test' database
    mysql_db:
      name: test
      state: import
      target: /var/lib/mysql/test.sql

  - name: removing test.sql
    file:
      path: /var/lib/mysql/test.sql
      state: absent

  - name: specify mysql root-user password
    mysql_user:
      name: root
      password: root
      priv: '*.*:All,GRANT'
      host: 192.168.0.152
      state: present
  - name: comment bind_address in my.cnf
    replace: 
      path: /etc/mysql/my.cnf
      regexp: '(\s+)bind-address = 127.0.0.1'
      replace: '\n\t#bind-address = 127.0.0.1'
      backup: yes

  - name: restarting mysql
    service: name=mysql state=restarted enabled=yes
